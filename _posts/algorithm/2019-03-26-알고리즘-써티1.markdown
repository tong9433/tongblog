---
layout: default
title:  "[Certi] Expert 첫, 두번째 시험 회고"
date:   2019-03-26
categories: "Algorithm"
---

# 첫 번째 시험 (2019. 01. 26) Fail

> 첫 시험이었다. 사실 준비와 노력이 커지 않았던 만큼 긴장도 많이 되지 않는 시험이었다. 그런데 분명 시험을 보면서 처음 들었던 생각은 `pro` 와는 다르다는 생각이다.
첫 시험을 치르면서 일단 기본적으로 비트연산 처리를 통해 프로그래밍 구현이 필요했고, 이후에 내가 만든 API를 통해 어셈블리어를 짜는 문제이다. 되게 되게 흥미로운 문제였고,
상당히 메모리, 어셈으로 업무에 임하는 분들에게 수월한 시험 같았다. but 그것은 핑계! 이 문제를 풀기 전 비트연산에 대해서는 어느정도 준비를 했었다. 하지만 지금 돌이켜 보면 제대로 못 푼 문제이다.
`1Bit 빨리 찾기` 알고리즘을 쓰지 않았기에, 그런 사람과 그렇지 않은 사람은 분명히 차이가 있을 것이다. 딱 API를 구현하는 것까지 pro 수준이라는 느낌이 들었다.
pro 등급이지만 pro 수준의 구현도 안되는 아이러니한 .. 어느정도 문제를 풀며 잘한 점과 그렇지 않은 점을 나누어 보았다.

## 잘한 점
* 착실하게 디버깅 함수를 만들어서 API 구현에 성공.
* 끝까지 포기하지 않고 푼 점.
* 비트연산을 잘 응용 한 점.

## 못한 점
* 먼저 어셈 코딩에 대한 지식이 부족.
* API를 생각보다 빠르게 구현하지 못했음. (구현완료 했을 때 1시간이 남은 걸로 기억)
* API를 빠르게 구현하지 못한 까닭에, 어셈 구현에 대한 멍(?) 때리는 시간이 길었고, 그로 인해 집중을 잘하지 못했음.
* 사소한 것에 되게 많은 시간이 소요.
* 어셈 코드를 구현할 때 그것을 좀 더 코드적으로 간편 하게 이용할 수 있는 함수 구현이 필요했음.

## 보완 할 점
1. 기본적으로 다양한 알고리즘, 자료구조를 아는 것이 좋은 것 같음.
2. 빠르고 정확한 코드를 구현할 수 있는 것이 중요.
3. 다시 생각하지만 귀찮더라도 하나라도 함수화해서 빠르게 디버깅 할 수 있는 스킬이 필요한 것 같음.

<br>
<br>
<br>

# 두 번째 시험 (2019. 03. 26) Time Exceed

> 3일 전 본 시험이다. 시험을 보고 나고, 멘붕이 크게 왔다. 어느 정도 틈틈히 준비를 했었고 하지만 준비한 것 중에 쓰임이 많지 않은 문제였다. 실망스러웠던 것은 문제를 pass하지
못했다는 점.. 그러고 보면 pass를 하는 친구들은 정말 대단한 것 같다. 아직 너무 부족하고 그렇기에 한 이틀간은 그냥 쉬었다. 사실 이 글을 쓰는 이유도 다시 리마인딩 하면서
이 멘붕을 끝내려고.. 또 다시 `재시작` 해보려고 한다. 다음 시험은 5월이다. 사실 이번 시험도 내 나름 아직 EXPERT의 수준이 아니라고 여겼기에 큰 기대는 하지 않았다. 그렇지만
아쉬운 것은 아쉬운 것. 오늘 시험을 경험으로 삼아 꼭 다음 시험에는 PASS! 더 나아가 합격을 노려볼 수 있는 그 `CLASS?`에 도달해야겠다 : ) 파이팅

## 잘한 점
* 문제의 풀이 방향이 맞았음.
* 중간에 포기하고 싶은 마음이 들었지만, 끝끝내 포기하지 않은 것.
* 레퍼런스 코드를 사용해서 구조체 화하고 빠르고 능숙하게 사용한 점.
* Input 사이즈를 줄여서 충분히 구현을 하고 테스트에 접근한 점 ( 5000 * 5000 -> 50 * 50 ). 그렇다보니 훨씬 수월하게 디버깅을 할 수 있었음.
* 생소하고 한 번도 써보지 못한 쓰레드에 관한 문제였는데 나름 멀티 쓰레드를 구현한 것.

## 못한 점
* 문제를 제대로 파악하지 못했다... 문제에서는 총 1~5의 개수가 25만개였지만, 2500만개로 착각했다. 본의 아니게 되게 어려운 문제로 착각해 버렸다.
* 메모리 할당 해제에 대한 개념이 아직 미숙. 레퍼런스 큐를 사용했는데 큐의 메모리를 할당하는 과정에서 Warning이 발생했다. 이 부분에서 분명 문제가 생겼을 수 있을 것 같다.
* 본 문제는 쓰레드를 두 개 주고, 멀티 쓰레딩을 진행하는 정말.. 획기적인 문제였다. 사실 알고리즘 문제인가? 라는 의구심도 들었지만 좋은 경험이었고, 문제를 정말 잘 출제한다고
 생각했다. 이런 부분에서 아직 지식이 부족한 것을 뼈저리게 느낄 수 있었다. 결국 이 쓰레드를 사용하는 데 꽤 오랜시간이 걸려서 마지막 디버깅 시에 시간적인 여유가 없었고,
 집중력이 떨어진 것 같다.

## 보완할 점
1. 문제를 잘 읽자. 이것은 기본
2. 레퍼런스를 더 잘 사용하자.
3. C++ 지식을 좀 더 넗혀야 할 것 같음. C++ 코딩에 대한 많은 지식이 필요한 것 같음. -> C++ 공부를 병행하자!
4. 시간복잡도에 대해서 어렴풋이 접근한 면이 있음. 나중에 고민 했을 때 시간 복잡도는 적당한 풀이 였지만 이것은 푸는 과정에서 엄밀히 생각 못한 것 자체가 실수.