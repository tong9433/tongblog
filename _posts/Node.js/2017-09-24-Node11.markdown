---
layout: default
title:  "Express 정적 파일 / 동적파일 서비스 🆕"
date:   2017-09-23 15:00:00
categories: "Node.js/Express"
---

본 포스트는 [생활코딩 강의](https://www.inflearn.com/course/nodejs-강좌-생활코딩) 강의노트입니다


<br>
## 이미지 파일을 서비스하기
1. `app.js`에 `app.use(express.static('public'));` : public 이라는 directory를 정적인 파일이 위치한 폴더로 지정하겠다는 의미
2. `$ mkdir public`를 통해 해당폴더에 `public`폴더를 생성할 것
3. 폴더 내 에 이미지 파일(`image.png`) 하나를 옮겨 놓기
4. `app.js`에 아래코드 추가

```javascript
app.use(express.static('public'));
app.get('route',function(req,res){
    res.send('Image, <img src="/image.png">')
});
```

<br>
## 정적 웹페이지 서비스하기
1. `static.html` 파일을 만듬

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
Hello, Static Page
<ul>
   <li>coding</li>
   <li>coding</li>
   <li>coding</li>
   <li>coding</li>
   <li>coding</li>
</ul>
</body>
</html>
```

2. `public` 폴더내에 `static.html` 파일 추가
3. `http://localhost:3000/static.html` 로 접속시 `static.html` 웹페이지가 나타남.


<br>
## 동적 웹페이지 서비스하기
* `app.js`에 아래코드 추가

```javascript
app.get('/dynamic', function (req, res) {
    var lis = '';
    for(var i=0; i<5; i++){
        lis += '<li>coding</li>';
    }
    var output = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Title</title>
    </head>
    <body>
        Hello, Dynamic Page
        <ul>
            ${lis}
        </ul>
    </body>
    </html>`;


    res.send(output);
})
```

* `static.html`과 같은 화면이 나타남.
* 동적인 장점과 정적인 장점을 둘다 갖추게 할 순 없을까 ? -> 템플릿 엔진 !



