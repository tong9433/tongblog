---
layout: default
title:  "[C++] Key-Value 데이터 검색 자료구조 Hash"
date:   2019-02-14
categories: "DataStructure"
---

# Key-Value 데이터 검색은 어떻게?

* `key - value` 로 이루어진 데이터를 검색하는 알고리즘을 생각해보자.

 1. 완전탐색
 > 우리는 간단하게 모든 data를 검색하며 O(N) 의 알고리즘으로 value를 구할 수 있다
 하지만 이는 우리가 원하는 알고리즘은 아니다.
 2. 정렬 + 이진탐색
 > key 값을 기준으로 데이터를 정렬하고, 해당 배열에서 이진탐색을 통해 value를 구하는 방법이다
 이는 O(NlogN)의 시간복잡도가 발생한다.
 3. Hash 데이터
 > Hash 자료구조를 구현해서 key 값에 대응하는 value를 구하는 방법이다
 이는 Hash를 어떻게 구현하느냐에 따라 시간복잡도가 다르겠지만, 대게 효율적인 검색법이다.
 이때 해쉬충돌이 발생함을 어떤식으로 해결하느냐에 따라 시간복잡도와 그 구현 난이도가 달라질 것이다.
 대표적으로 `OpenAddress` 방식과 `Chaning`으로 나뉜다.
 이번 포스팅에서는 체이닝 방식에 해쉬 충돌 해결을 이용할 것이다.
 많은 사람들은 체이닝 방식에서 포인터를 사용해서 동적으로 hash key 충돌을 해결한다.
 `na982` 님은 거의 균등히 분포되는 getKey 함수를 구현하고 넉넉한 hash 이차원배열을 선언해서 이를 구현했다.
 데이터가 매우 많아지면 완벽한 hash는 아니지만 속도면에서 매우 빠르므로 CERTI 문제에서 유용하게 쓰일 것 같다.

 <br>

# Chaning 방식의 Hash 자료구조 구현
* [na982님 블로그](https://na982.tistory.com/) 의 훌륭한 소스를 참고했습니다.
