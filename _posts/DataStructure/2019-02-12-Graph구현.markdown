---
layout: default
title:  "[C++] 인접리스트 그래프 구현 연습"
date:   2019-02-12 23:00:00
categories: "DataStructure"
---

# 인접리스트 그래프 구현 연습
* 그래프를 구현하는 것에 있어서 `인접행렬`과 `인접리스트`로 구현 할 수 있다는 것을 알고 있음.
* but, 인접행렬은 구현하는 것은 쉬우나, Performance 면에서 당연 차이가 있음. 당연 행렬로 구현할 경우 모든 Node의 인접 여부를 확인해야 하지만 인접리스트의 경우
각 노드에 존재하는 리스트를 한번 탐색하면 되기 때문.
* 길찾기나 그래프 문제 등을 풀 경우 Map이 아닌 정점 두 개의 Edge 정보를 제공하는 알고리즘 문제의 경우 당연 인접리스트가 자주 사용 됨.
* 본인은 STL을 사용하지 않는 CERTI를 준비하기에 인접리스트 직접 그래프 구현 코드를 하나씩 살펴보려 함.



* 본 자료는 `이것이 C++이다 `  교재를 공부하며 내용을 본인이 이해하기 쉽게 정리한 강의노트입니다 : )

## Chapter 1 C 와는 다른 C++
### 1.1 C와 C++의 차이
* C언어에서 가장 중요한 것은 바로 자료형입니다. `정수형(int)`이나 `문자형(char)` 이냐에 따라 계산되는 값과 표현 방식이 달라지기 때문. 그렇기에 C에서는 구조체를 `typedef`를 이용해서 사용자 정의 자료형을 만들었음.
* 더불어 C언어를 배울 때 누구나 처음 `포인터`를 접할 때  어려움이 있었을 겁니다. 대체로 C에서 이해하기 힘든 개념을 포인터로 꼽곤하지만, 안타깝게 C++에서 역시 포인터는 문젯거리.
* `C++` 은 한마디로 `C의 비효율성을 개선한 언어`라고 생각하면 좋을 것 같음.
* C 와 C++의 가장 큰 차이점은 자료형의 어려운 개념을 쉽게 만드는 것에 있음

### 1.2 Hello World로 본 C++
```c++
#include <iostream>

int main() {
    std::cout << "Hello, World" << std::endl;
    return 0;
}
```