---
layout: default
title:  "Java Date/시간 관련 주제"
date:   2017-09-26 14:00:00
categories: "Java"
---



# Java Date/시간 관련 주제

<br>
## java.util.Date 사용
* 현재 날짜를 구하려고 할때 `Date` 클래스를 이용하자.
```java
Date curDate = new Date();
```
결과
```
Tue Sep 26 22:32:43 KST 2017
```

<br>
## 특정 포맷으로 날짜 표현
* 특정 포맷에 맞게 날짜를 다룰 경우 `SimpleDateFormat` 클래스를 이용하자.
* 주의할점 `y M d H m s` 소문자, 대문자를 꼭 맞추어야 포맷으로 인식함.
```java
SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
String ranDateStr = "2017.08.27 15:30:10";
Date ranDate = dateFormat.parse(ranDateStr);
System.out.println(ranDate);
```
결과
```
Sun Aug 27 15:30:10 KST 2017
```

<br>
## 날짜를 초단위로 바꾸기
* 특정 날짜를 초단위로 바꾸기
* `getTime()`을 한 뒤 `1000`으로 나눌 경우 초단위의 값이 출력된다.
* 이와 같은 방식으로 두개의 날짜를 비교할 수 있음.
```java
SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
String ranDateStr = "2017.08.27 15:30:10";
Date ranDate = dateFormat.parse(ranDateStr);
System.out.println(ranDate);
long ranDateTime = ranDate.getTime();
System.out.println(ranDateTime/1000);
```
결과
```
1503815410
```

<br>
## Calendar 클래스
* `Calendar` 클래스를 이용해서 해당 `Date`의 `년 월 일 날짜 시간 분 초`를 출력해보자
* `Calendar.MONTH`의 경우 `+1`을 해야함을 유의하자.
```java
        Date curDate = new Date();
        System.out.println(curDate);

        Calendar cal = Calendar.getInstance();
        cal.setTime(curDate);

        System.out.println(cal.get(Calendar.YEAR));
        System.out.println(cal.get(Calendar.MONTH)+1);
        System.out.println(cal.get(Calendar.DATE));
        System.out.println(cal.get(Calendar.HOUR_OF_DAY));
        System.out.println(cal.get(Calendar.MINUTE));
        System.out.println(cal.get(Calendar.SECOND));
```
결과
```
Tue Sep 26 22:50:21 KST 2017
2017
9
26
22
50
21
```